add_library(ulb SHARED mesh.cc delauny.cc lbm.cc logger.cc poisson.cc meshing.cc fvm.cc)

find_package(MKL)
if(MKL_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64 -DMKL_LP64")
    target_include_directories(ulb PRIVATE ${MKL_INCLUDE_DIRS})
    target_link_libraries(ulb ${MKL_LIBRARIES} pthread dl)
else()
    find_package(BLAS REQUIRED)
    if (BLAS_FOUND)
        message("MKL is not found using blas instead")
        target_link_libraries(ulb blas)
    else()
        message(STATUS "No blas library could be found.")
    endif()
endif()

if(USE_MPI)
    find_package(MPI)
    if(MPI_CXX_FOUND)
        target_include_directories(ulb PRIVATE ${MPI_CXX_INCLUDE_PATH})
        set_target_properties(ulb PROPERTIES COMPILE_FLAGS "-DMPI_ENABLED")
        if(MPI_CXX_COMPILE_FLAGS)
            set_target_properties(ulb PROPERTIES COMPILE_FLAGS "${MPI_CXX_COMPILE_FLAGS}")
        endif()
        if (MPI_CXX_LINK_FLAGS)
            set_target_properties(ulb PROPERTIES LINK_FLAGS "${MPI_CXX_LINK_FLAGS}")
        endif()
        if (MPI_CXX_COMPILER)
            set(CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
        endif()
        message(STATUS "Configured MPI compilation.")
    else()
        message(STATUS "MPI could not be found.")
    endif()
    target_include_directories(ulb PRIVATE ${MPI_CXX_INCLUDE_PATH})
    target_link_libraries(ulb ${MPI_CXX_LIBRARIES})
endif()

if (USE_OMP)
    find_package(OpenMP REQUIRED)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

if (BUILD_TETGEN)
    target_include_directories(ulb PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../lib)
    target_link_libraries(ulb tetgen triangle)
endif()
